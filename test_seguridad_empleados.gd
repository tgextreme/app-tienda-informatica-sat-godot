extends SceneTree

func _init():
	print("=== TEST DE SEGURIDAD EMPLEADOS ===")
	
	# Simular inicio de sesi√≥n como admin
	AppState.usuario_actual = {
		"id": 1,
		"nombre": "Administrador",
		"email": "admin@tienda-sat.com", 
		"rol": "ADMIN",
		"rol_id": 1
	}
	
	print("‚úÖ Usuario admin simulado: ", AppState.usuario_actual.nombre)
	print("üé≠ Rol: ", AppState.usuario_actual.rol)
	
	# Crear DataService para pruebas
	var data_service = preload("res://autoload/DataService.gd").new()
	
	print("\n=== PRUEBA 1: Verificaci√≥n de empleados existentes ===")
	
	# Verificar funci√≥n obtener_empleados
	if data_service.has_method("obtener_empleados"):
		print("‚úÖ Funci√≥n obtener_empleados disponible")
	else:
		print("‚ùå Funci√≥n obtener_empleados NO disponible")
	
	print("\n=== PRUEBA 2: Protecci√≥n del admin principal ===")
	
	# Simular intento de eliminar admin (ID=1) 
	if data_service.has_method("eliminar_empleado"):
		print("üß™ Probando eliminar empleado ID=1 (admin)...")
		var resultado = data_service.eliminar_empleado(1)
		if resultado is Dictionary and not resultado.get("success", true):
			print("‚úÖ PROTECCI√ìN ACTIVA: ", resultado.get("message", "Admin protegido"))
		else:
			print("‚ùå FALLO DE SEGURIDAD: Admin no est√° protegido")
	else:
		print("‚ùå Funci√≥n eliminar_empleado NO disponible")
	
	print("\n=== PRUEBA 3: Verificaci√≥n de controles de UI ===")
	print("‚ÑπÔ∏è  Para probar completamente:")
	print("1. Ejecutar aplicaci√≥n normal")
	print("2. Iniciar sesi√≥n como admin@tienda-sat.com / admin123")
	print("3. Ir a Dashboard > Empleados")
	print("4. Verificar que:")
	print("   - Solo admin ve bot√≥n 'A√ëADIR'")
	print("   - Admin principal muestra 'PROTEGIDO' en lugar de 'ELIMINAR'")
	print("   - Al editar admin, solo permite cambiar contrase√±a")
	
	print("\n=== TEST COMPLETADO ===")
	quit()